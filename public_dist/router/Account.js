let requestIp=require("request-ip"),{Register,Experience,Login,Logout,IdSearch,PwSearch,PwChange,Withdrawal}=require("../api/api.account"),{GetToken,RequestToId}=require("../api/api.auth"),dataDecrypt=require("../util/crpyto").dataDecrypt,ResultResponse=require("../util/resultResponse"),router=require("express").Router();router.post("/api/account/register",async(t,a)=>{try{var e=t.body.data,r=dataDecrypt(e),s=await Register(r);a.status(200).send(s)}catch(t){a.status(400).send(t)}}),router.post("/api/account/experience",async(t,a)=>{try{console.log("requestIp",requestIp.getClientIp(t));var e,r=t.body.data,{key:s,accountObj:c}=dataDecrypt(r);s!==process.env.REACT_APP_SECRET_KEY?a.status(400).send(new ResultResponse(404,null,"secret key 오류")):(e=await Experience(c),a.status(200).send(e))}catch(t){a.status(400).send(t)}}),router.post("/api/account/login",async(t,a)=>{try{var e=t.body.data,{id:r,pw:s}=dataDecrypt(e),c=await Login(r,s);a.status(200).send(c)}catch(t){a.status(400).send(t)}}),router.post("/api/account/idSearch",async(t,a)=>{try{var e=t.body.data,r=dataDecrypt(e),s=await IdSearch(r);a.status(200).send(s)}catch(t){}}),router.post("/api/account/pwSearch",async(t,a)=>{try{var e=t.body.data,r=dataDecrypt(e),s=await PwSearch(r);console.log("result",s),a.status(200).send(s)}catch(t){}}),router.post("/api/account/pwChange",async(t,a)=>{try{var e=t.body.data,r=dataDecrypt(e),s=await PwChange(r);a.status(200).send(s)}catch(t){console.log("err",t)}}),router.get("/api/account/logout",async(t,a)=>{try{var e=GetToken(t),r=await Logout(e);a.status(200).send(r)}catch(t){}}),router.get("/api/account/withdrawal",async(t,a)=>{try{var e=RequestToId(t),r=await Withdrawal(e);a.status(200).send(r)}catch(t){}}),module.exports=router;// build date : 2024. 12. 23. 오후 10:15:20