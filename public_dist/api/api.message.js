let MessageModel=require("../model/message").MessageModel,dataEncrypt=require("../util/crpyto").dataEncrypt,ResultResponse=require("../util/resultResponse");function getMessage(e,s,t){try{var a={id:e};return Promise.all([MessageModel.countDocuments(a).exec(),MessageModel.find(a).sort({sendDate:-1}).skip(Number(s)*t).limit(t)]).then(e=>{var s=e[0],e=e[1],s=dataEncrypt({total:s,message:e});return new ResultResponse(200,s)}).catch(e=>{throw new ResultResponse(403,e,"getMessage ERROR")})}catch(e){throw new ResultResponse(404,e,"getMessage catch ERROR")}}async function readMessage(e,s){try{var t={id:e,_id:s},a=await MessageModel.findOne(t);if(a)return a.isRead=!0,a.save(),new ResultResponse(200);throw new ResultResponse(403,err,"readMessage ERROR")}catch(e){throw new ResultResponse(404,e,"readMessage catch ERROR")}}async function deleteMessage(e,s){try{if(s.length<=0)throw ResultResponse(403,s,"deleteData.length <= 0");for(var t of s){var a={id:e,_id:t};await MessageModel.findOneAndDelete(a)}return new ResultResponse(200,s)}catch(e){throw new ResultResponse(404,e,"DeleteMessage catch ERROR")}}async function postMessage(e){try{var s={sender:e.name,senderPhone:e.phone,senderEmail:e.email,contents:e.contents,id:e.id};return new MessageModel(s).save(),new ResultResponse(200)}catch(e){throw new ResultResponse(404,e,"postMessage catch ERROR")}}module.exports={getMessage:getMessage,readMessage:readMessage,deleteMessage:deleteMessage,postMessage:postMessage};// build date : 2024. 12. 23. 오후 10:15:20