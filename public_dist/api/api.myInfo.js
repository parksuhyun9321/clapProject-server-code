let UserModel=require("../model/user").UserModel,encryptKey=require("../util/key").encryptKey,ResultResponse=require("../util/resultResponse"),dataEncrypt=require("../util/crpyto").dataEncrypt;async function getMyInfo(e){try{var n={id:e},t=await UserModel.findOne(n),o={id:t.id,name:t.name,email:t.email,phone:t.phone,birth:t.birth,job:t.job};return new ResultResponse(200,dataEncrypt(o))}catch(e){throw new ResultResponse(400,e,"getMyInfo ERROR")}}async function setMyInfo(e,n,t){try{var o={id:e},r=await UserModel.findOne(o);if(!r)return new ResultResponse(403,o.id,"userInfo null");"job"===n?r.job=t:r[n].isPublic=t,r.save();var s={id:r.id,name:r.name,email:r.email,phone:r.phone,birth:r.birth,job:r.job};return new ResultResponse(200,s)}catch(e){throw new ResultResponse(400,e,"setMyInfo ERROR")}}async function getMyHome(e){try{var n={id:e},t=await UserModel.findOne(n),o=encryptKey(t.id);return new ResultResponse(200,dataEncrypt(encodeURIComponent(o)))}catch(e){throw new ResultResponse(400,e,"getMyHome ERROR")}}module.exports={getMyInfo:getMyInfo,setMyInfo:setMyInfo,getMyHome:getMyHome};// build date : 2024. 12. 23. 오후 10:15:20